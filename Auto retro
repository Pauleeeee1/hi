
-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PathfindingService = game:GetService("PathfindingService")

-- Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local TokensFolder = Workspace:WaitForChild("Collectibles")

local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
local AutoCollectTokens = false
local AutoKillMobs = false
local Tpcooldown = 10
local CurrentSword = "ClassicSword"

-- Create and position the player stand plate
local part = Instance.new("Part")
part.Name = "PlayerStandPlate"
part.Position = Vector3.new(-47063, 320, 0)
part.Size = Vector3.new(10, 1, 10)
part.Anchored = true
part.CanCollide = true
part.Parent = Workspace

-- Set the current sword and notify the server
local function SetCurrentSword(va1)
	CurrentSword = va1
	print("Current sword set to:", va1)
	ReplicatedStorage.Events.PlayerActivesCommand:FireServer(CurrentSword)
end

-- Function to tween to a target CFrame
local function tweenToPosition(targetCFrame)
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if humanoidRootPart then
		local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})
		tween:Play()
		tween.Completed:Wait()
		task.wait(1)
	else
		print("HumanoidRootPart not found")
	end
end

-- Function to move to a position using Pathfinding
local function moveToPosition(targetCFrame)
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if humanoid and humanoidRootPart then
		local path = PathfindingService:CreatePath({
			AgentRadius = 2,
			AgentHeight = 5,
			AgentCanJump = true,
			AgentJumpHeight = humanoid.JumpHeight,
			AgentMaxSlope = humanoid.MaxSlope
		})
		path:ComputeAsync(humanoidRootPart.Position, targetCFrame.Position)
		local waypoints = path:GetWaypoints()
		for _, waypoint in ipairs(waypoints) do
			humanoid:MoveTo(waypoint.Position)
			humanoid.MoveToFinished:Wait()
		end
	else
		print("Humanoid or HumanoidRootPart not found")
	end
end

--delete sword
local function DeleteSwordYAY()
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()  -- Ensure character is loaded
	print("Character loaded")

	local sword = character:FindFirstChild(CurrentSword)
	if sword then
		print("Found "..CurrentSword)
		local swordPart = sword:FindFirstChild("SwordPart")
		if swordPart then
			print("Found SwordPart")
			local touchInterest = swordPart:FindFirstChild("TouchInterest")
			if touchInterest then
				print("Found TouchInterest")
				touchInterest:Destroy()
				print("TouchInterest destroyed")
			else
				print("TouchInterest not found")
			end
		else
			print("SwordPart not found")
		end
	else
		print(CurrentSword.." not found")
	end
end

-- Function to collect all tokens
local function CollectAllTokens()
	while AutoCollectTokens do
		for _, Token in ipairs(TokensFolder:GetChildren()) do
			if Token:IsA("BasePart") and AutoCollectTokens then
				if Token then
					moveToPosition(Token.CFrame)
					Token:Destroy()
				end
			end
		end
		task.wait(0.1) -- Delay between collection cycles
	end
end

-- Function to auto-kill mobs by resizing the sword
local function AutoKill()
	local sword = character:FindFirstChild(CurrentSword)
	DeleteSwordYAY()
	if sword then
		local swordPart = sword:FindFirstChild("SwordPart")
		while AutoKillMobs and swordPart do
			swordPart.Size = Vector3.new(1000, 1000, 1000)
			swordPart.CanCollide = false
			task.wait(1)
			swordPart.Size = Vector3.new(1, 1, 1)
		end
	else
		print("Sword not found")
	end
end

-- Function to teleport to a plate and start auto-kill
local function TPToPlate()
	local targetCFrame = CFrame.new(-47063, 330, 0)
	tweenToPosition(targetCFrame)
	if AutoKillMobs then
		AutoKill()
	end
end

-- Function to set up auto-collect by clearing tokens initially
local function SetUpautocollect()
	for _, Token in ipairs(TokensFolder:GetChildren()) do
		if Token:IsA("BasePart") then
			Token:Destroy()
		end
	end
end

-- OrionLib UI Setup
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Auto Retro", HidePremium = false, SaveConfig = false})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local PlayerTab = Window:MakeTab({
	Name = "Player Stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


local TestTab = Window:MakeTab({
	Name = "Test stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Make Sword Better!",
	Callback = function()
		local swordPart = character:WaitForChild(CurrentSword):WaitForChild("SwordPart")
		swordPart.Size = Vector3.new(1000, 1000, 100)
		swordPart.CanCollide = false
	end    
})

Tab:AddToggle({
	Name = "Auto Kill (recommended)",
	Default = false,
	Callback = function(Value)
		AutoKillMobs = Value
		if AutoKillMobs then
			TPToPlate()
		end
	end    
})

Tab:AddDropdown({
	Name = "Select Sword",
	Default = "ClassicSword",
	Options = {"ClassicSword", "ClassicFirebrand", "ClassicIllumina"},
	Callback = function(Value)
		SetCurrentSword(Value)
	end    
})


PlayerTab:AddSlider({
	Name = "WalkSpeed",
	Min = 1,
	Max = 100,
	Default = 25,
	Color = Color3.fromRGB(255, 255, 255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		humanoid.WalkSpeed = Value
	end    
})






TestTab:AddButton({
	Name = "Unbug Player!",
	Callback = function()
		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
		if humanoidRootPart then
			humanoidRootPart.Anchored = true
		else
			warn("HumanoidRootPart not found!")
		end
	end    
})
TestTab:AddButton({
	Name = "Setup Auto Collect",
	Callback = function()
		SetUpautocollect()
	end    
})

TestTab:AddButton({
	Name = "No Lag",
	Callback = function()

		loadstring(game:HttpGet("https://raw.githubusercontent.com/fdvll/pet-simulator-99/main/cpuReducer.lua"))()
	end    
})

TestTab:AddSlider({
	Name = "Tp Cooldown (ms)",
	Min = 0,
	Max = 100,
	Default = 10,
	Color = Color3.fromRGB(255, 255, 255),
	Increment = 1,
	ValueName = "Tp Cooldown",
	Callback = function(Value)
		Tpcooldown = Value
	end    
})

TestTab:AddToggle({
	Name = "Auto Collect Tokens (flags sometimes)",
	Default = false,
	Callback = function(Value)
		AutoCollectTokens = Value
		if AutoCollectTokens then
			CollectAllTokens()
		end
	end    
})

OrionLib:Init()




